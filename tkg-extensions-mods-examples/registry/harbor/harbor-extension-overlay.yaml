#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:data", "data")

#@ def updates():
spec:
  fetch: 
    #@overlay/append
    - inline:
        pathsFrom:
          - configMapRef:
              name: harbor-overlay
  template:
    #@overlay/match by=overlay.all
    - ytt:
       #@overlay/replace
       paths:
         - 0/tkg-extensions/common
         - 0/tkg-extensions/registry/harbor
         - 1/overlay-s3-pvc-fix.yaml
         - 1/trust-letsencrypt.yaml
       inline:
         #@overlay/match missing_ok=True
         paths: 
           update-harbor-http-proxy.yaml: |
             #@ load("@ytt:overlay", "overlay")
             #@ harbor_httpproxy = overlay.subset({"kind": "HTTPProxy", "metadata": {"name": "harbor-httpproxy"}})
             #@overlay/match by=harbor_httpproxy
             ---
             spec:
               routes:
                 - #@overlay/match by=overlay.index(3)
                   #@overlay/match missing_ok=True
                   timeoutPolicy:
                     response: 60s

#@ end

#@overlay/match by=overlay.subset({"kind": "Extension"})
---
spec:
  #@overlay/replace via=lambda a,_: yaml.encode(overlay.apply(yaml.decode(a), updates()))
  objects:
